@model List<xChatEntities.AccountManagerConnect>

@{
    ViewBag.Title = "Manager";
}
@using xChatEntities;

<link href="~/Content/StyleWhatsapp/styleWhatsapp.css" rel="stylesheet" />
<link href="~/Content/chatWindowManager.css" rel="stylesheet" />

<style type="text/css">
    .bootbox-close-button close {
        display: none;
    }

    .disableposession {
        pointer-events: none !important;
        opacity: 0.4;
    }
</style>
<div class="row" style="height:100%">
    @if (ViewBag.RolType == (Int32)EnumRolTypeChat.Manager)
    {
        <div class="col-sm-3 side" id="divColumnOne">
            <div class="side-one">
                <div class="row heading" style="font-weight: 700;background-color:red" id="DivColManager">
                    @ViewBag.ManageName
                    <a href="#" id="btnChatsManager" style="cursor:pointer; color:white; display:none" onclick="Fn_UserActiveByAgent(@ViewBag.ManagetId, 1, '', '')">(Mis Chats)</a>
                </div>
                <button type="button" class="btn btn-danger" style="margin-top: 50%;margin-left: 50%;transform: translateX(-50%);cursor:pointer !important" id="btnConnectManager">Conectar</button>
                <div class="sideBar" style=" overflow-y: auto;height: 94%; display:none" id="divListAgents">
                    @*@if (ViewBag.ListAgentByManager.Elements != null && ViewBag.ListAgentByManager.Elements.Count > 0)
                        {
                            for (int i = 0; i < ViewBag.ListAgentByManager.Elements.Count; i++)
                            {
                                <a href="#" class="listAgent chat-list-item d-flex flex-row w-100 p-2 border-bottom" id="btnconnect" style="color:black" data-AgentValueId="@ViewBag.ListAgentByManager.Elements[i].AgentId" data-IsAgent="@ViewBag.ListAgentByManager.Elements[i].AccountManagerIsAgent" data-agentname="@ViewBag.ListAgentByManager.Elements[i].AccountAgentName" ondrop="drop(event)" ondragover="allowDrop(event)">
                                    <div class="chat-list-item d-flex flex-row w-100 p-2" data-id="@ViewBag.ListAgentByManager.Elements[i].AgentId" id="lstAgentData">
                                        <img src="/Content/Imagenes/imgdefault.png" alt="Profile Photo" class="img-fluid rounded-circle mr-2" style="height:50px;">
                                        <div class="w-50">
                                            <div class="name" style="font-weight:500">@ViewBag.ListAgentByManager.Elements[i].AccountAgentName</div>
                                            <div class="small last-message"><i class=""></i></div>
                                        </div>
                                        <div class="flex-grow-1 text-right">
                                            @if (@ViewBag.ListAgentByManager.Elements[i].AccountManagerIsActive == 1)
                                            {
                                                <div class="small last-message" style="margin-right: 10px;"><span id="idOnline" class="online_icon"></span></div>

                                            }
                                            else
                                            {
                                                <div class="small last-message" style="margin-right: 10px;">
                                                    <span id="idOnline" class="Disconectonline_icon"></span>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </a>
                            }
                        }*@

                </div>
            </div>
            <div id="loader" style="display:none"></div>
        </div>
        <div class="col-sm-3 side">
            <div class="side-one" id="divColumnsTwo">
                <div id="idTextUserManager" class="row heading" style="font-weight: 700">
                    Usuarios (Agente)
                </div>
                <div class="sideBar" id="userActiveShow" style=" overflow-y: auto;height: 94%;">

                </div>
            </div>
        </div>
        <div class="col-sm conversation">
            <div class="heading" style="font-weight: 700">

                <div class="heading-avatar-icon">
                    Chat
                    <img src="~/Content/Imagenes/imgMessage.png" />
                    @*<div class="col-sm-1 col-xs-1  heading-dot pull-right">
                            <span id="action_menu_btn">
                                <i class="fa fa-ellipsis-v fa-2x  pull-right" aria-hidden="true"></i>
                            </span>

                        </div>*@
                    <div class="dropdown heading-dot pull-right" id="divOptionChat" style="display:none">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="Options" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="background: #009688;">
                            Opciones
                        </button>
                        <ul id="ddlOptions" class="dropdown-menu" aria-labelledby="Options">
                            <li class="dropdown-item" href="#" data-option="1" style="cursor:pointer">Finalizar Chat</li>
                        </ul>
                    </div>
                </div>

            </div>
            @*<div class="action_menu selected" style="display: none;">
                    <ul id="optionMenu">
                        <li data-input="1">Cerrar Chat</li>
                    </ul>
                </div>*@

            <div class="message" id="conversation" style="overflow-y: auto;height: 86%;">

            </div>
            <div class="card-footer">
                <div id="divSendMessage" class="input-group disableposession">
                    <div class="input-group-append">
                        <span class="input-group-text attach_btn"><i class="fa fa-smile-o"></i></span>
                    </div>
                    <textarea id="message" class="col-lg-12 form-control type_msg disableposession" placeholder="Escriba un mensaje aquí"></textarea>
                    <div class="input-group-append">
                        <span class="input-group-text send_btn"><i class="fa fa-paper-plane" id="btnsendmessage"></i></span>
                    </div>
                </div>
            </div>

        </div>
    }

</div>

<input type="hidden" id="displayname" value="" />
<input type="hidden" id="AgentId" value="0" />
<input type="hidden" id="ChatId" value="0" />
<input type="hidden" id="ChatPosesionId" value="0" />
<input type="hidden" id="ModuleAppId" value="0" />
<input type="hidden" id="UserName" value="" />
<input type="hidden" id="UserEmail" value="" />
<input type="hidden" id="UserToken" value="" />
<input type="hidden" id="AgentToken" value="" />
<input type="hidden" id="ManagerToken" value="" />
<input type="hidden" id="AccountAgentName" value="" />

<input type="hidden" id="hfRolType" value="@(@ViewBag.RolType == null ? 0 : ViewBag.RolType)" />
<input type="hidden" id="hfManagerId" value="@(ViewBag.ManagetId == null ? 0 : ViewBag.ManagetId)" />
<input type="hidden" id="InPossesion" value="0" />
<input type="hidden" id="hfModuleId" value="0" />
<input type="hidden" id="hfLanguageId" value="0" />
@section scripts{

    <script src="~/Scripts/jquery.signalR-2.4.0.js"></script>
    <script src="@xChatEntities.Constants.Url.SignalRHub"></script>

    <script type="text/javascript">

        var Counter;
        var chatIdCurrent = 0;
        var chatIdCurrentForManager = 0;

        //function Fn_Init() {
        //    Fn_InitListUser("");
        //}
        //Habilita Chat
        function Fn_EnabledPossession() {
             $("#divSendMessage").removeClass("disableposession");
             $("#message").removeClass("disableposession");
        }

        //Deshabilita Chat
        function Fn_DisabledPossession() {
             $("#divSendMessage").addClass("disableposession");
             $("#message").addClass("disableposession");
        }

        //Muestra opciones
        function Fn_ShowOptionChat() {
            $("#divOptionChat").css('display', 'block');
        }

        //Oculta Opciones
        function Fn_HideOptionChat() {
            $("#divOptionChat").css('display', 'none');
        }

        //Muesta Loader
        function Fn_ShowLoader() {
            //$("#loader").css('display', 'block');
             $.blockUI({
                message: '<img style="width:50px" src="http://chatmanagement.tk/xchatmanagment/Content/Imagenes/loadinggif.gif" />',
                css: { 'z-index': '1011','position': 'fixed','padding': '0px','margin': '0px','width': '30%', 'top': '40%', 'left': '35%', 'text-align': 'center','color': 'rgb(0, 0, 0)','border': '0','background-color': '','cursor': 'wait', }
            })
        }

        //Oculta Loader
        function Fn_HideLoader() {
            //$("#loader").css('display', 'none');
            $.unblockUI();
        }

        function Fn_InitListUser() {
            $(document).on("click", ".listUser", function (e) {
                e.preventDefault();
                Fn_ShowLoader();
                $('.listUser').each(function (i, e) {
                    $($('.listUser')[i]).removeClass('active_chat');
                });
                $(this).addClass("active_chat");
                var chatid = $(this).attr("id");
                var status = $(this).attr("data-statusid");
                if (status == 2)
                {
                    Fn_EnabledPossession();
                }
                else
                {
                    Fn_DisabledPossession();
                }
                if ($("input[id$=InPossesion]").val() == 1)
                {
                    chatIdCurrentForManager = chatid;
                    Fn_MessagesManagerAndUser(chatid, $("input[id$=hfManagerId]").val());
                    Fn_ShowOptionChat();

                }
                else
                {
                    chatIdCurrent = chatid;
                    Fn_MessageUser(chatid, $("input[id$=AgentId]").val())
                }


                var conversationEntity = { ChatId: chatid }
                Counter.server.setMessageReadForManager(conversationEntity);
                $(this).find('.haveMessageActive').removeClass();

            });

        }

        //Funcion para cerrar chat de un usuario.
        function Fn_CloseChatUser(chatid, managerid)
        {
            if (chatid == 0) {
                  bootbox.alert({
                           message: "Debe seleccionar un Chat.",
                           size: 'small'
                       });
                return;
            }

            var objChat = {
                ChatId: chatid,
                ModuleAppId: $("input[id$=ModuleAppId]").val(),
                AgentId: managerid,
                UserName: $("input[id$=UserName]").val(),
                UserEmail: $("input[id$=UserEmail]").val(),
                Message: $("#message").val(),
                DateMessage: "",
                UserToken: $("input[id$=UserToken]").val(),
                AgentToken: $("input[id$=AgentToken]").val(),
                AccountAgentName: $("input[id$=AccountAgentName]").val(),
            };

            Counter.server.userDisconnectForMangaer(objChat);

        }

        //Carga la lista de usuarios de agente.
        function Fn_UserActiveByAgent(agentId, ispossesion, chattransfer, chatdisconect)
        {
            //Fn_ShowLoader();
           $("input[id$=InPossesion]").val(ispossesion);

          if (agentId != undefined && agentId > 0)
          {
            var lstUserActive = [];
            var lstUsers = [];

            var objUserConnect =
            {
                AccountUserId: agentId
            };

            var objData = JSON.stringify({ AccountManagerEntity: objUserConnect});
            success = function (response) {
                try {
                    //ChatIsReadForManager si es 1 es leido si es 0 no leido (agregar marca)
                    lstUserActive = response.Elements;

                    if (lstUserActive != null && lstUserActive != "") {
                        $("#userActiveShow div").remove();
                        lstUsers = [];
                        for (var i = 0; i < lstUserActive.length; i++) {
                            lstUsers = [];
                            if (lstUserActive[i].ChatIsReadForManager == 1)
                            {
                                lstUsers.push({
                                    userId: lstUserActive[i].ChatId,
                                    userName: lstUserActive[i].UserName,
                                    userEmail: lstUserActive[i].UserEmail,
                                    ChatIsReadForManager: lstUserActive[i].ChatIsReadForManager,
                                    ChatId: lstUserActive[i].ChatId,
                                    Status: lstUserActive[i].Status
                                });
                            }
                            else
                            {
                                lstUsers.push({
                                    userId: lstUserActive[i].ChatId,
                                    userName: lstUserActive[i].UserName,
                                    userEmail: lstUserActive[i].UserEmail,
                                    ChatIsReadForManager: lstUserActive[i].ChatIsReadForManager,
                                    ChatId: lstUserActive[i].ChatId,
                                    Status: lstUserActive[i].Status
                                });
                            }

                            $("#userActiveShow").append(fn_LoadTemplates("userActiveViewManager", { lstUsers }));
                        }
                        //Fn_InitListUser(agentId);

                        //Mantiene el chat Actual activa
                        $('.listUser').each(function (i, e) {
                            if ($('.listUser')[i].id == chatIdCurrent) {                       //Valido si es el chat actual
                                $($('.listUser')[i]).addClass("active_chat")
                            }
                        });

                    }
                    else
                    {
                        $("#userActiveShow").append(fn_LoadTemplates("userActiveViewManager", { lstUsers }));
                        $("#userActiveShow").empty();
                        $("#conversation div").remove();
                    }

                    if ($("input[id$=InPossesion]").val() == 1)
                    {
                        Fn_ShowLoader();
                        if ($("input[id$=ChatPosesionId]").val() > 0)
                        {
                             chatIdCurrentForManager = $("input[id$=ChatPosesionId]").val();
                            //Mantiene el chat Actual activa
                            $('.listUser').each(function (i, e) {
                                $($('.listUser')[i]).removeClass('active_chat');
                             });
                            $('.listUser').each(function (i, e) {
                                if ($('.listUser')[i].id == chatIdCurrentForManager) {           //Valido si es el chat actual en lista de manager
                                    $($('.listUser')[i]).addClass("active_chat")
                                 }
                            });
                            Fn_ShowOptionChat();
                            Fn_VerifyAgentOrManager(2, "@ViewBag.ManageName");
                        } else {
                            chatIdCurrent = 0;
                             $("input[id$=ChatId]").val(0);

                             $('.listAgent').each(function (i, e) {
                                 $($('.listAgent')[i]).removeClass('active_chat');
                             });
                             $("input[id$=ChatPosesionId]").val(0);
                             $("#conversation div").remove();
                             Fn_DisabledPossession();
                             Fn_VerifyAgentOrManager(2, "@ViewBag.ManageName");
                        }
                    }
                    if (chattransfer != "" && chattransfer != 0)
                    {
                        $('.listAgent').each(function (i, e) {
                            $($('.listAgent')[i]).removeClass('active_chat');
                        });
                        $('.listAgent').each(function (i, e) {
                            if ($($('.listAgent')[i]).attr('data-agentvalueid') == $("input[id$=AgentId]").val()) {
                                $($('.listAgent')[i]).addClass("active_chat");
                            }
                        });

                        if ($("input[id$=ChatId]").val() == chattransfer) {
                            Fn_DisabledPossession();
                            $("#conversation div").remove();
                            $("input[id$=ChatId]").val(0);
                            chatIdCurrent = 0;

                        }
                    }
                    //validacion para desconexion de Usuario(Chat)
                    if (chatdisconect != "" && chatdisconect != 0)
                    {
                        if ($("input[id$=ChatId]").val() == chatdisconect)
                        {
                            Fn_DisabledPossession();
                            $("#conversation div").remove();
                            $("input[id$=ChatId]").val(0);
                            chatIdCurrent = 0;
                        }
                    }
                }
                catch (e) {
                    alert("Se produjo un error al cargar datos.");
                    Fn_HideLoader();
                }
                Fn_HideLoader();
            };
            error = function (xhr, ajaxOptions, thrownError) {
                Fn_HideLoader();
                fn_message("e", "Se produjo un error al cargar datos.");
            };

            Fn_CallMethod("@(Url.Action("GetListUserByAgent", "Manager"))", { data: objData }, success, error);
          } else {
              Fn_HideLoader();
              alert("No se esta especificacndo el Agente.");
              return;
          }
        }

        //Muesta Conversacion entre Usuario y Agente
        function Fn_MessageUser(chatid, agentid)
        {
            var lstMessageUser = [];
            var lstMessageManager = [];
            var lstChat = [];
            if (chatid == undefined || chatid <= 0 || agentid == undefined || agentid <= 0)
            {
                alert("Se debe especificar chat y Agente");
                return;
            }
            var objChat = { ChatId: chatid, AgentId: agentid };

            var objData = JSON.stringify({ UserConnect: objChat});
            success = function (response) {
                try {
                    lstChat = response.Elements;
                    if (lstChat != null && lstChat.length > 0) {
                        $("#conversation div").remove();
                        for (var i = 0; i < lstChat.length; i++) {
                            if (lstChat[i].IsUser == 1) {
                                lstMessageUser = [];
                                lstMessageUser.push({
                                    message: lstChat[i].Message,
                                });
                                $("#conversation").append(fn_LoadTemplates("messageUser", { lstMessageUser }));
                                $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                            }
                            else {
                                lstMessageManager = [];
                                lstMessageManager.push({
                                    message: lstChat[i].Message,
                                });
                                $("#conversation").append(fn_LoadTemplates("messageManager", { lstMessageManager }));
                                $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                            }
                            $("input[id$=ChatId]").val(lstChat[i].ChatId);
                            $("input[id$=AgentId]").val(lstChat[i].AccountManagerId);//Of Agent
                            $("input[id$=ModuleAppId]").val(lstChat[i].ModuleAppId);
                            $("input[id$=UserName]").val(lstChat[i].UserName);
                            $("input[id$=UserEmail]").val(lstChat[i].UserEmail);
                            $("input[id$=UserToken]").val(lstChat[i].UserToken);
                            $("input[id$=AgentToken]").val(lstChat[i].AccountManagerToken);//Of Agent
                            $("input[id$=AccountAgentName]").val(lstChat[i].AccountManagerName);//Of Agent
                        }
                    } else {
                         Fn_HideLoader();
                        $("#conversation div").remove();
                     }
                }
                catch (e) {
                     Fn_HideLoader();
                    alert("Hubo un problema al cargar la conversacion.");
                }
                Fn_HideLoader();
            };
            error = function (xhr, ajaxOptions, thrownError) {
                 Fn_HideLoader();
                alert("Hubo un problema al cargar la conversacion.");
            };

            Fn_CallMethod("@(Url.Action("MyConversationShow", "Manager"))", { data: objData }, success, error);
        }

        //Muesta conversacion entre Usuario y Manager
        function Fn_MessagesManagerAndUser(chatid, managerid)
        {
            var lstMessageUser = [];
            var lstMessageManager = [];
            var lstChat = [];
          if (chatid == undefined || chatid <= 0 || managerid == undefined || managerid <= 0)
            {
                alert("Se debe especificar chat y Manager");
                return;
            }
            var objChat =
            {
                ChatId: chatid,
                AgentId: managerid
            };

            var objData = JSON.stringify({ UserConnect: objChat});
            success = function (response) {
                try {
                    lstChat = response.Elements;
                    if (lstChat != null && lstChat.length > 0) {
                        $("#conversation div").remove();
                        for (var i = 0; i < lstChat.length; i++) {
                            if (lstChat[i].IsUser == 1) {
                                lstMessageUser = [];
                                lstMessageUser.push({
                                    message: lstChat[i].Message,
                                });
                                $("#conversation").append(fn_LoadTemplates("messageUser", { lstMessageUser }));
                                $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                            }
                            else {
                                lstMessageManager = [];
                                lstMessageManager.push({
                                    message: lstChat[i].Message,
                                });
                                $("#conversation").append(fn_LoadTemplates("messageManager", { lstMessageManager }));
                                $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                            }
                            $("input[id$=ChatPosesionId]").val(lstChat[i].ChatId);
                            //$("input[id$=AgentId]").val(lstChat[i].AccountManagerId);//Of Agent
                            $("input[id$=ModuleAppId]").val(lstChat[i].ModuleAppId);
                            $("input[id$=UserName]").val(lstChat[i].UserName);
                            $("input[id$=UserEmail]").val(lstChat[i].UserEmail);
                            $("input[id$=UserToken]").val(lstChat[i].UserToken);
                            $("input[id$=AgentToken]").val(lstChat[i].AccountManagerToken);//Of Agent
                            $("input[id$=AccountAgentName]").val(lstChat[i].AccountManagerName);//Of Agent
                            $("input[id$=hfModuleId]").val(lstChat[i].ModuleId);
                            $("input[id$=hfLanguageId]").val(lstChat[i].LanguageId);
                        }
                     } else {
                        $("#conversation div").remove();
                         Fn_HideLoader();
                     }
                }
                catch (e) {
                    alert("Error al mostrar la lista de mensajes.");
                     Fn_HideLoader();
                }
                 Fn_HideLoader();
            };
            error = function (xhr, ajaxOptions, thrownError) {
                alert("Error al mostrar la lista de mensajes.");
                 Fn_HideLoader();
            };

            Fn_CallMethod("@(Url.Action("MyConversationShowByManager", "Manager"))", { data: objData }, success, error);
        }



        //Envia Mensaje
        function Fn_SendMenssage() {
              if ($("#message").val().trim() == "") {
                  return false;
              }
              var objChat = {
                  ChatId: $("input[id$=ChatPosesionId]").val() == "" ? 0 : $("input[id$=ChatPosesionId]").val(),
                  ModuleAppId: $("input[id$=ModuleAppId]").val() == "" ? 0 : $("input[id$=ModuleAppId]").val(),
                  AgentId: $("input[id$=hfManagerId]").val(),//$("input[id$=AgentId]").val(),
                  UserName: $("input[id$=UserName]").val(),
                  UserEmail: $("input[id$=UserEmail]").val(),
                  Message: $("#message").val(),
                  DateMessage: "",
                  UserToken: $("input[id$=UserToken]").val(),
                  AgentToken: $("input[id$=ManagerToken]").val(), //$("input[id$=AgentToken]").val(),
                  ManagerToken: $("input[id$=ManagerToken]").val(),
                  AccountAgentName: "@ViewBag.ManageName",// $("#AccountAgentName").val(),
                  ChatBySkillModuleId: $("input[id$=hfModuleId]").val(),
                  ChatBySkillLanguageId: $("input[id$=hfLanguageId]").val()
              };
              Counter.server.sendToUser(objChat);
              $("#message").text("");
        }

        function allowDrop(ev) {
            ev.preventDefault();
        }

        //Arrastrar
        function drag(ev) {
            var userid = $(ev.currentTarget).data("userid");
            var username = $(ev.currentTarget).data("username");
            var chatid = $(ev.currentTarget).data("chatid");
            var status = $(ev.currentTarget).data("statusid");
            var objUser = {
                Userid: userid,
                Username: username,
                ChatId: chatid,
                Status: status
            }
            var jsonUser = JSON.stringify(objUser);
            ev.dataTransfer.setData("text", jsonUser);
        }

        //Soltar
        function drop(ev) {
            ev.preventDefault();

            var agentId = $(ev.currentTarget).data("agentvalueid");
            var agentname = $(ev.currentTarget).data("agentname");

            var objUser = JSON.parse(ev.dataTransfer.getData("text"));
            var username = objUser.Username;
            var chatid = objUser.ChatId;
            var status = objUser.Status;

            if (status == 2) {
                bootbox.alert({
                    message: "Debe dejar el chat para realizar la asignación.",
                    size: 'small'
                });
            } else {
                bootbox.confirm({
                    //title: "Trasferencia de Chat",
                    message: "Desea transferir el Chat de " + username.toUpperCase() + " a " + agentname.toUpperCase() + "?",
                    buttons: {
                        cancel: {
                            label: '<i class="fa fa-times"></i> Cancelar'
                        },
                        confirm: {
                            label: '<i class="fa fa-check"></i> Confirmar'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            Fn_ShowLoader();
                            //Confirm
                            var objChat = {
                                ChatId: chatid,
                                ModuleAppId: $("input[id$=ModuleAppId]").val(),
                                AgentId: agentId,                                    //Agente destino
                                AgentOrigin: $("input[id$=AgentId]").val(),          //Agente origen
                                ManagerId: $("input[id$=hfManagerId]").val(),
                                UserName: username,
                                Message: "Tranferencia chat de " + username.toUpperCase() + " a " + agentname.toUpperCase(),
                                UserEmail: "",
                                DateMessage: "",
                                UserToken: "",
                                AgentToken: "",
                                ManagerToken: "",
                                AccountAgentName: "",
                                AccountManagerName: ""

                            };

                            Fn_MoveChatToAgent(objChat);
                        }
                    }
                });
            }
        }

        // Funcion para mover un chat a un Agente.
        function Fn_MoveChatToAgent(objChat) {
            Counter.server.moveChatToAgent(objChat);
        }

        function Fn_VerifyAgentOrManager(isAgent, agentname) {
            if (isAgent == 1) {
                $("#idTextUserManager").text("Usuarios (" + agentname + ")");

            } else {
                 $("#idTextUserManager").text("Usuarios (" + agentname + ")");
            }

        }
        function SuccessConnect() {
            Fn_LoadListAgentByManager();
            Fn_InitListUser();
        }

        //Load list Agents by ManagerId
        function Fn_LoadListAgentByManager()
        {
          if ($("input[id$=hfManagerId]").val() > 0)
          {
           var data = { "ManagerId": $("input[id$=hfManagerId]").val() };
            var lstAgents = [];
            success = function (response) {
                try {
                    if (response != null)
                    {
                      if (response.Elements != null)
                      {
                        lstAgents = response.Elements;
                        if (lstAgents.length > 0)
                        {
                            $("#divListAgents").empty();
                            $("#divListAgents").append(fn_LoadTemplates("AgentsHandlebars", { lstAgents }));
                            $("#btnConnectManager").css("display", "none");
                            $("#DivColManager").css("background", "#009688");
                            $("#divListAgents").css("display", "block");
                            $("#btnChatsManager").css("display", "block");
                        } else {
                            $("#divListAgents").empty();
                            $("#divListAgents").append(fn_LoadTemplates("AgentsHandlebars", { lstAgents }));
                            $("#btnConnectManager").css("display", "none");
                            $("#DivColManager").css("background", "#009688");
                            $("#divListAgents").css("display", "block");
                            alert("No tiene agentes asignados.");
                            $("#btnChatsManager").css("display", "block");
                        }
                    } else {
                        alert("Se produjo un error al cargar lista de Agentes.");
                        Fn_HideLoader();
                       }
                    } else {
                         alert("Se produjo un error al cargar lista de Agentes.");
                          Fn_HideLoader();
                    }

                }
                catch (e) {
                    alert("Se produjo un error al cargar lista de Agentes.");
                    Fn_HideLoader();
                }
                Fn_HideLoader();
            };
            error = function (xhr, ajaxOptions, thrownError) {
                Fn_HideLoader();
                fn_message("e", "Se produjo un error al cargar lista de Agentes.");
            };

            Fn_CallMethod("@(Url.Action("GetListAgentByManager", "Manager"))", data, success, error);
          }
          else {
              Fn_HideLoader();
              alert("No se esta especificacndo el Manager.");
              return;
          }
        }

        $(function ()
        {
            //Fn_Init();

            $.support.cors = true;
            $.connection.hub.url = "@xChatEntities.Constants.Url.SignalR";
            Counter = $.connection.counterHub;

            $(document).on('click', '#btnConnectManager', function ()
            {
                 // Iniciar conexión con Concentrador.
                 Fn_ShowLoader();
                 $.connection.hub.start().done(function ()
                 {
                     var connectionExist = $.connection.hub.id;
                     $("input[id$=ManagerToken]").val(connectionExist);
                     if (connectionExist != undefined)
                     {
                         var obj = { AccountUserId: $("input[id$=hfManagerId]").val(),ModuloAppId: 1, EMail: "",Password: "", Token: ""};
                         Counter.server.accountUserConnect(obj);
                         SuccessConnect();
                         // Selecciona Agente
                        $(document).on('click', '#btnconnect', function ()
                        {
                             if ($(this).attr("data-IsAgent") == "True" || $(this).attr("data-IsAgent") == "true")
                             {
                                 //Agente seleccionado
                                 $('.listAgent').each(function (i, e) {
                                     $($('.listAgent')[i]).removeClass('active_chat');
                                 });
                                 $(this).addClass("active_chat")
                                 var agentname = $(this).attr("data-agentname");
                                  //End Agente seleccionado
                                 chatIdCurrent = 0;                                      //chat actual de Agente se reinicia a 0
                                 chatIdCurrentForManager = 0;                            //chat actual de Manager se reinicia a 0
                                                                                          //Desabilitar botones para manager
                                 Fn_DisabledPossession();
                                 Fn_ShowLoader();
                                 Fn_HideOptionChat();
                                 Fn_VerifyAgentOrManager(1, agentname);
                                 var agentId = $(this).attr("data-agentvalueid")
                                 $("input[id$=AgentId]").val(agentId);
                                 $("input[id$=ChatId]").val(0);                          //Se agrego
                                  $("input[id$=ChatPosesionId]").val(0);
                                 Fn_UserActiveByAgent($("input[id$=AgentId]").val(), 0, "", "")
                                 $("#conversation div").remove();
                             }
                        });
                     }
                 }).fail(function () {
                    Fn_HideLoader();
                    alert("Failed in connecting to the signalr server");
                    window.location.reload(true);
                });
           });

            $.connection.hub.disconnected(function () {
                   Fn_HideLoader();
                   window.location.reload(true);
               });

            $("#btnsendmessage").click(function () {
                    Fn_SendMenssage();
                    $("#message").val("");
                });

            $('#message').keypress(function (e) {
                    var keycode = (e.keyCode ? e.keyCode : e.which);
                    if (keycode == '13') {
                        Fn_SendMenssage();
                        e.preventDefault();
                        $("#message").val("");
                        return false;
                    }
                });

            $(document).on('click', '#ddlOptions li', function () {

                    var optionId = $(this).attr('data-option');
                    if (optionId == 1)
                    {
                        var usernamevalue = $("input[id$=UserName]").val();
                        bootbox.confirm({
                            //title: "Chat",
                            message: "Desea finalizar chat de " + usernamevalue.toUpperCase() + "?",
                            buttons: {
                                cancel: {
                                    label: '<i class="fa fa-times"></i> Cancelar'
                                },
                                confirm: {
                                    label: '<i class="fa fa-check"></i> Confirmar'
                                }
                            },
                            callback: function (result) {
                                if (result) {
                                    Fn_ShowLoader();
                                    //Confirm
                                    Fn_CloseChatUser($("input[id$=ChatPosesionId]").val(), $("input[id$=hfManagerId]").val());
                                }
                            }
                        });
                    }

                });

            $(document).on('click', '.dropdown-menu li a', function () {

                    var chatidvalue = $(this).attr('data-chatvalue');
                    var usernamevalue = $(this).attr('data-nameuser');

                   bootbox.confirm({
                        //title: "Chat",
                        message: "Desea tomar posesión del chat de " + usernamevalue.toUpperCase() + "?",
                        buttons: {
                            cancel: {
                                label: '<i class="fa fa-times"></i> Cancelar'
                            },
                            confirm: {
                                label: '<i class="fa fa-check"></i> Confirmar'
                            }
                        },
                        callback: function (result) {
                            if (result) {
                                Fn_ShowLoader();
                                //Confirm
                                var objChat = {
                                    ChatId: chatidvalue,
                                    ModuleAppId: $("input[id$=ModuleAppId]").val(),
                                    AgentId: $("input[id$=hfManagerId]").val(), //Agente destino (En esta caso es el Manager)
                                    AgentOrigin: $("input[id$=AgentId]").val(),          //Agente origen
                                    ManagerId: $("input[id$=hfManagerId]").val(),
                                    UserName: usernamevalue,
                                    Message: "Manager " + "@ViewBag.ManageName" + " a tomado posesión del chat.",
                                    UserEmail: "",
                                    DateMessage: "",
                                    UserToken: "",
                                    AgentToken: "",
                                    ManagerToken: $("input[id$=ManagerToken]").val(),
                                    AccountAgentName: "",
                                    AccountManagerName: ""

                                };

                                Fn_MoveChatToAgent(objChat);
                            }
                        }
                     });
                });

            // Chat recibido del usuario.
            Counter.client.monitor_ReceivedFromUserAndAgentInViewManager = function (obj) {

                if (obj.ChatId > 0 && $("input[id$=InPossesion]").val() == 0)
                {

                     //chatIdCurrent = $("input[id$=ChatId]").val();  esto comente 6-9-2019
                    chatIdCurrentForManager = 0;
                    if (obj.ChatId == chatIdCurrent && obj.AgentId == $("input[id$=AgentId]").val()) {

                        if (obj.IsSendUser == 1) {
                            lstMessageUser = [];
                            lstMessageUser.push({
                                message: obj.Message,
                            });
                            $("#conversation").append(fn_LoadTemplates("messageUser", { lstMessageUser }));
                            $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                        }
                        else {
                            lstMessageManager = [];
                            lstMessageManager.push({
                                message: obj.Message,
                            });
                            $("#conversation").append(fn_LoadTemplates("messageManager", { lstMessageManager }));
                            $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                        }
                        $("input[id$=ChatId]").val(obj.ChatId);
                        $("#ManagerId").val(obj.ManagerId);
                        $("#ModuleAppId").val(obj.ModuleAppId);
                        $("input[id$=UserName]").val(obj.UserName);
                        $("#UserEmail").val(obj.UserEmail);
                        $("#UserToken").val(obj.UserToken);
                        $("#AgentToken").val(obj.AgentToken);
                    }
                }
                //if ($("input[id$=InPossesion]").val() == 0)
                //{
                //    Fn_UserActiveByAgent($("input[id$=AgentId]").val(), 0, "", "")
                //}

            };

                // Chat recibido del usuario para manager que tomo chat.
            Counter.client.monitor_ReceivedFromUserAndManagerInViewManager = function (obj) {

                if (obj.ChatId > 0 && $("input[id$=InPossesion]").val() == 1)
                {
                    chatIdCurrent = 0;
                    chatIdCurrentForManager = $("input[id$=ChatPosesionId]").val();

                    if (obj.ChatId == chatIdCurrentForManager && obj.AgentId == $("input[id$=hfManagerId]").val()) {

                        if (obj.IsSendUser == 1) {
                            lstMessageUser = [];
                            lstMessageUser.push({
                                message: obj.Message,
                                username: (obj.UserName == undefined || obj.UserName == "") ? "" : obj.UserName
                            });
                            $("#conversation").append(fn_LoadTemplates("messageUser", { lstMessageUser }));
                            $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                        }
                        else {
                            lstMessageManager = [];
                            lstMessageManager.push({
                                message: obj.Message,
                                accountAgentName: (obj.AccountAgentName == undefined || obj.AccountAgentName == "") ? "" : obj.AccountAgentName
                            });
                            $("#conversation").append(fn_LoadTemplates("messageManager", { lstMessageManager }));
                            $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                        }
                        $("#ChatPosesionId").val(obj.ChatId);
                        //$("#ManagerId").val(obj.ManagerId);
                        $("#ModuleAppId").val(obj.ModuleAppId);
                        $("input[id$=UserName]").val(obj.UserName);
                        $("#UserEmail").val(obj.UserEmail);
                        $("#UserToken").val(obj.UserToken);
                        $("#AgentToken").val(obj.AgentToken);
                        $("input[id$=hfModuleId]").val(obj.ChatBySkillModuleId);
                        $("input[id$=hfLanguageId]").val(obj.ChatBySkillLanguageId);
                    }
                }

                //Fn_UserActiveByAgent($("input[id$=hfManagerId]").val(), 0, "", "")
            };

            Counter.client.receivedFromUserDisconnect = function (obj) {
                if (obj.ChatId > 0) {
                    if (obj.IsSendUser == 1) {
                        lstMessageUser = [];
                        lstMessageUser.push({
                            message: obj.Message,
                        });
                        $("#conversation").append(fn_LoadTemplates("messageUser", { lstMessageUser }));
                        $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                    }
                    else {
                        lstMessageManager = [];
                        lstMessageManager.push({
                            message: obj.Message,
                        });
                        $("#conversation").append(fn_LoadTemplates("messageManager", { lstMessageManager }));
                        $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                    }
                    $("input[id$=ChatId]").val(obj.ChatId);
                    $("#ManagerId").val(obj.ManagerId);
                    $("#ModuleAppId").val(obj.ModuleAppId);
                    $("input[id$=UserName]").val(obj.UserName);
                    $("#UserEmail").val(obj.UserEmail);
                    $("#UserToken").val(obj.UserToken);
                    $("#AgentToken").val(obj.AgentToken);
                    //$("#AccountAgentName").val(obj.AccountAgentName);
                }
                Fn_UserActiveByAgent($("input[id$=AgentId]").val(), 0, "", "")
            };

            // Lista actualizada de usuarios.
            Counter.client.receivedListAgentsOfNewConnection = function (obj) {
                var lstAgents = [];
                lstAgents = obj.Elements;
                if (lstAgents != null && lstAgents.length > 0)
                {
                    $("#divListAgents").empty();
                    $("#divListAgents").append(fn_LoadTemplates("AgentsHandlebars", { lstAgents }));
                }

            };

            // Actualiza la lista de usuarios de Agente
            Counter.client.reloadNewUserConnectUserConnectByAgent = function (success) {
                if ($("input[id$=AgentId]").val() != undefined && $("input[id$=AgentId]").val() > 0 && $("input[id$=InPossesion]").val() == 0)
                {
                    Fn_UserActiveByAgent($("input[id$=AgentId]").val(), 0, "", "")
                }
            };

            // Actualiza la lista de usuarios de Agente despues de transferencia
            Counter.client.reloadNewUserConnectUserConnectByAgentAfterTransfer = function (conversationEntity) {
                if ($("input[id$=AgentId]").val() != undefined && $("input[id$=AgentId]").val() > 0 && $("input[id$=InPossesion]").val() == 0) {
                    Fn_UserActiveByAgent($("input[id$=AgentId]").val(), 0, conversationEntity.ChatId, "")
                }
                if (conversationEntity.UserName != "") {
                    Fn_HideLoader();
                    bootbox.alert({
                        message: "Transferencia correcta del Usuario: " + conversationEntity.UserName,
                        size: 'small'
                    });
                }
            };

            // Actualiza la lista de usuarios de Agente despues de la posesion del chat
            Counter.client.reloadConnectUserConnectByAgentAfterPossesion = function (objConversation) {
                if (objConversation != null)
                {
                    Fn_HideLoader();
                    Fn_EnabledPossession();
                    bootbox.alert({
                        message: "Usted tiene el control del chat de: " + objConversation.UserName,
                        size: 'small'
                    });
                    if ($("input[id$=hfManagerId]").val() != undefined && $("input[id$=hfManagerId]").val() > 0) {
                        if (objConversation.ChatId > 0)
                        {
                            $("input[id$=InPossesion]").val(1);

                            $('.listAgent').each(function (i, e) {
                                $($('.listAgent')[i]).removeClass('active_chat');
                            });
                            $("input[id$=UserName]").val(objConversation.UserName);
                            $("input[id$=ChatPosesionId]").val(objConversation.ChatId); //Id del chat tomado por manager
                            Fn_MessagesManagerAndUser($("input[id$=ChatPosesionId]").val(), $("input[id$=hfManagerId]").val());
                            Fn_UserActiveByAgent($("input[id$=hfManagerId]").val(), 1, "", "");
                        }
                    }
                }
            };

            //Mensaje de agente no disponible en vista Manager
            Counter.client.monitor_messageAgentNotConnectInViewManager = function (success)
            {
                try {
                    if (success == -1)
                    {
                        Fn_HideLoader();
                        bootbox.alert({
                            message: "Agente no disponible.",
                            size: 'small'
                        });
                    }
                    else
                    {
                       Fn_HideLoader();
                    }

                } catch (e) {
                   Fn_HideLoader();
                }

            };

            //Mensaje de no se pudo concretar posesion de chat en vista Manager
            Counter.client.monitor_messageAgentNotPosesionInViewManager = function (success) {
                try {
                    if (success == -1) {
                        Fn_HideLoader();
                        bootbox.alert({
                            message: "No se pudo concretar la posesion del Chat.",
                            size: 'small'
                        });
                    }
                    else {
                       Fn_HideLoader();
                    }
                } catch (e) {
                    Fn_HideLoader();
                }

            };

            // Actualiza la lista de usuarios de Agente despues de la posesion del chat
            Counter.client.reloadConnectUserConnectByAgentAfterPossesionFinish = function (objConversation) {

                if (objConversation != null && objConversation.ChatId == 0) {
                    bootbox.alert({
                        message: "Se finalizo chat de: " + objConversation.UserName + " ",
                        size: 'small'
                    });
                    if ($("input[id$=hfManagerId]").val() != undefined && $("input[id$=hfManagerId]").val() > 0)
                    {
                            $("input[id$=InPossesion]").val(1);
                            $('.listAgent').each(function (i, e) {
                                $($('.listAgent')[i]).removeClass('active_chat');
                            });
                            $("input[id$=UserName]").val("");
                            $("input[id$=UserToken]").val("");
                            $("input[id$=ChatPosesionId]").val(objConversation.ChatId); //Id del chat tomado por manager
                            Fn_HideOptionChat();
                            Fn_DisabledPossession();
                            Fn_UserActiveByAgent($("input[id$=hfManagerId]").val(), 1, "", "");

                    }
                } else {
                    bootbox.alert({
                        message: "No se pudo Finalizar el Chat.",
                        size: 'small'
                    });
                }
                Fn_HideLoader();
            };

            // Actualiza la lista de usuarios de Agente despues de desconexion de usuario(chat)
            Counter.client.chatUserDisconnect = function (obtUser) {
                try {
                    if ($("input[id$=AgentId]").val() != undefined && $("input[id$=AgentId]").val() > 0) {
                        if (obtUser != null && obtUser.ChatId > 0) {
                            Fn_UserActiveByAgent($("input[id$=AgentId]").val(), 0, "", obtUser.ChatId)
                            Fn_HideLoader();
                        } else {
                          Fn_HideLoader();
                        }
                    }
                } catch (e) {
                   Fn_HideLoader();
                }
            };

            // Actualiza la lista de usuarios de Agente despues de la transferencia del chat de Agente a Manager
            Counter.client.reloadConnectUserConnectByAgentAfterTransferToManager = function (objConversation) {
                if ($("input[id$=hfManagerId]").val() != undefined && $("input[id$=hfManagerId]").val() > 0)
                {
                   if ($("input[id$=InPossesion]").val() == 1)
                   {
                        if (objConversation != null && objConversation.ChatId > 0 && $("input[id$=hfManagerId]").val() == objConversation.ManagerId)
                        {
                            Fn_UserActiveByAgent($("input[id$=hfManagerId]").val(), 1, "", "");
                        }
                   }
                   else
                   {
                       if (objConversation != null && objConversation.ChatId > 0)
                       {
                           if ($("input[id$=AgentId]").val() > 0) {
                                Fn_UserActiveByAgent($("input[id$=AgentId]").val(), 0, objConversation.ChatId, "")
                           }
                       }
                    }
                     bootbox.alert({
                                      message: "Ah recibido una transferencia del chat de: " + objConversation.UserName,
                                      size: 'small'
                      });
                }
                Fn_HideLoader();
            };

        });


    </script>

}
