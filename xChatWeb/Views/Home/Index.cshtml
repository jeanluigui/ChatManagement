@{
    ViewBag.Title = "Chat Manager";

}
@using xChatEntities;
<link href="~/Content/StyleWhatsapp/styleWhatsapp.css" rel="stylesheet" />
@*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">*@
<style type="text/css">
    .bootbox-close-button close {
        display: none;
    }
    .disableposession {
        pointer-events: none !important;
        opacity: 0.4;
    }
</style>
<div class="row" style="height:100%">
      
        @if (ViewBag.RolType == (Int32)EnumRolTypeChat.Agent)
        {
            <div class="col-sm-3 side">
                <div class="side-one">
                    <div class="heading" style="font-weight: 700;" id="divListAgents">
                        @if (ViewBag.AgentActive.Elements != null && ViewBag.AgentActive.Elements.Count > 0)
                        {
                            for (int i = 0; i < ViewBag.AgentActive.Elements.Count; i++)
                            {
                                <a href="#" class="listAgent" id="btnconnect" data-AgentValueId="@ViewBag.AgentActive.Elements[i].AgentId" data-IsAgent="@ViewBag.AgentActive.Elements[i].AccountManagerIsAgent" data-managerid="@ViewBag.AgentActive.Elements[i].ManagerId">
                                    <div class="" data-id="@ViewBag.AgentActive.Elements[i].AgentId" id="lstAgentData">
                                        <div class="col-sm-12 col-xs-12 sideBar-avatar" style="color:white;">
                                            <div class="avatar-icon">
                                                @*<img src="~/Content/Imagenes/user-profile.png" />*@
                                                <span id="idOnline" class="Disconectonline_icon" style="bottom: -1.1em;"></span>
                                            </div>
                                            @ViewBag.AgentActive.Elements[i].AccountAgentName
                                        </div>
                                    </div>
                                </a>
                            }
                        }
                    </div>
                    <div id="loader" style="display:none"></div>
                    <div class="sideBar" id="userActiveShow" style=" overflow-y: auto;height:94%">

                    </div>
                </div>
            </div>
            <div class="col-sm conversation">
                <div class="heading" style="font-weight: 700">

                    <div class="heading-avatar-icon">
                        Chat
                        <img src="~/Content/Imagenes/imgMessage.png" />
                        <div class="col-sm-1 col-xs-1  heading-dot pull-right">
                            <span id="action_menu_btn">
                                <i class="fa fa-ellipsis-v fa-2x  pull-right" aria-hidden="true"></i>
                            </span>

                        </div>
                    </div>
                </div>
                <div class="action_menu selected" style="display: none;">
                    <ul id="optionMenu">
                        <li data-input="1">Cerrar Chat</li>
                    </ul>
                </div>
                <div class="col-sm message" id="conversation" style="overflow-y: auto;height: 86%;background:hsla(0, 0%, 80%, 0.22)">

                </div>
                <div class="card-footer">
                    <div id="divSendMessage" class="input-group disableposession">
                        <div class="input-group-append">
                            <span class="input-group-text attach_btn"><i class="fa fa-smile-o"></i></span>
                        </div>
                        <textarea id="message" class="form-control type_msg disableposession" placeholder="Escriba un mensaje aquí"></textarea>
                        <div class="input-group-append">
                            <span class="input-group-text send_btn"><i class="fa fa-paper-plane" id="btnsendmessage"></i></span>
                        </div>
                    </div>
                </div>
            </div>
        }

</div>

<input type="hidden" id="displayname" value="" />
<input type="hidden" id="AgentId" value="0" />
<input type="hidden" id="ChatId" value="0" />
<input type="hidden" id="ModuleAppId" value="0" />
<input type="hidden" id="UserName" value="" />
<input type="hidden" id="UserEmail" value="" />
<input type="hidden" id="UserToken" value="" />
<input type="hidden" id="AgentToken" value="" />
<input type="hidden" id="AccountAgentName" value="" />

<input type="hidden" id="hfRolType" value="@(@ViewBag.RolType == null ? 0 : ViewBag.RolType)" />
<input type="hidden" id="hfManagerId" value="@(ViewBag.ManagetId == null ? 0 : ViewBag.ManagetId)" />

@section scripts{

    <script src="~/Scripts/jquery.signalR-2.4.0.js"></script>
    <script src="@xChatEntities.Constants.Url.SignalRHub"></script>

    <script type="text/javascript">
        var Counter;
        var chatIdCurrent = 0;



        function Fn_Init() {
            $("#message").focus();
            Fn_Bind("");
        }

        function Fn_Bind(agentId) {

            $(".listUser").on("click", function (e) {
                e.preventDefault();
                $('.listUser div').each(function (i, e) {
                    $(e).removeClass('active_chat');
                });
                $($(this).children()[0]).addClass("active_chat");
                var chatid = $(this).attr("id")
                var status = $(this).attr("data-statusid");
                if (status == 2)
                {
                    $("#divSendMessage").addClass("disableposession");
                    $("#message").addClass("disableposession");
                    $(this).addClass("disableuser"); 
                    $("input[id$=ChatId]").val(0);
                    chatIdCurrent = 0;
                }
                else
                {
                    $("#divSendMessage").removeClass("disableposession");
                    $("#message").removeClass("disableposession");
                    $(this).removeClass("disableuser");
                }
                chatIdCurrent = chatid;
                Fn_MessageUser(chatid, agentId)

                var conversationEntity = { ChatId: chatid }
                Counter.server.setMessageReadForManager(conversationEntity);
                $(this).find('.haveMessageActive').removeClass();
            });

        }

        // ------------------------------------------------
        // Funcion para cerrar chat de un usuario.
        // ------------------------------------------------
        function Fn_CloseChatUser() {

            var chatId = $("input[id$=ChatId]").val();

            if (chatId == "0") {
             alert("Debe seleccionar un Chat.");
                return;
            }

            var objChat = {
                ChatId: $("input[id$=ChatId]").val(),
                ModuleAppId: $("input[id$=ModuleAppId]").val(),
                AgentId: $("input[id$=AgentId]").val(),
                UserName: $("input[id$=UserName]").val(),
                UserEmail: $("input[id$=UserEmail]").val(),
                Message: $("#message").val(),
                DateMessage: "",
                UserToken: $("input[id$=UserToken]").val(),
                AgentToken: $("input[id$=AgentToken]").val(),
                AccountAgentName: $("input[id$=AccountAgentName]").val(),
            };

            Counter.server.userDisconnectForAgent(objChat);

        }
        
        // ------------------------------------------------
        // Lista de Usuarios de Agente
        // ------------------------------------------------
        function Fn_UserActiveByAgent(agentId, chatpossesion, chattransfer, chatdisconect) {
            var lstUserActive = [];
            var lstUsers = [];
            if (agentId == undefined || agentId <= 0) {
                alert("Error ");
                return;
            }
            var objUserConnect =
            {
                AccountUserId: agentId
            };

            var objData = JSON.stringify({ AccountManagerEntity: objUserConnect});
            success = function (response) {
                try {
                    //ChatIsReadForManager si es 1 es leido si es 0 no leido (agregar marca)
                    lstUserActive = response.Elements;

                    if (lstUserActive != null && lstUserActive != "")
                    {
                        $("#userActiveShow a").remove();
                        lstUsers = [];
                        for (var i = 0; i < lstUserActive.length; i++)
                        {
                            lstUsers = [];
                            if (lstUserActive[i].ChatIsReadForManager == 1)
                            {
                                lstUsers.push({
                                    userId: lstUserActive[i].ChatId,
                                    userName: lstUserActive[i].UserName,
                                    userEmail: lstUserActive[i].UserEmail,
                                    ChatIsReadForManager: lstUserActive[i].ChatIsReadForManager,
                                    Status: lstUserActive[i].Status
                                });
                            }
                            else
                            {
                                lstUsers.push({
                                    userId: lstUserActive[i].ChatId,
                                    userName: lstUserActive[i].UserName,
                                    userEmail: lstUserActive[i].UserEmail,
                                    ChatIsReadForManager: lstUserActive[i].ChatIsReadForManager,
                                    Status: lstUserActive[i].Status
                                });
                            }

                            $("#userActiveShow").append(fn_LoadTemplates("userActive", { lstUsers }));
                        }
                        Fn_Bind(agentId);
                     
                        //Mantiene el chat Actual activa
                        $('.listUser').each(function (i, e) {
                            if ($(e)[0].id == chatIdCurrent) {                       //Valido si es el chat actual
                                $($($(e)[0]).children()[0]).addClass("active_chat")
                            }
                        });         
                        //validacion para bloquear chat tomado por Manager
                        if (chatpossesion != "" && chatpossesion != 0)
                        {                            
                            if ($("input[id$=ChatId]").val() == chatpossesion)
                            {
                                $("#divSendMessage").addClass("disableposession");
                                $("#message").addClass("disableposession");
                                $("#conversation div").remove();
                                $("input[id$=ChatId]").val(0);
                                chatIdCurrent = 0;
                            }
                        }    
                        //validacion para tranferencia chat hecha por Manager
                        if (chattransfer != "" && chattransfer != 0) {
                            if ($("input[id$=ChatId]").val() == chattransfer) {
                                $("#divSendMessage").addClass("disableposession");
                                $("#message").addClass("disableposession");
                                $("#conversation div").remove();
                                $("input[id$=ChatId]").val(0);
                                chatIdCurrent = 0;
                            }
                        }
                        //validacion para desconexion de Usuario(Chat)
                        if (chatdisconect != "" && chatdisconect != 0) {
                            if ($("input[id$=ChatId]").val() == chatdisconect) {
                                $("#divSendMessage").addClass("disableposession");
                                $("#message").addClass("disableposession");
                                $("#conversation div").remove();
                                $("input[id$=ChatId]").val(0);
                                chatIdCurrent = 0;
                            }
                        }  
                    }
                    else
                    {                        
                        $("#userActiveShow").append(fn_LoadTemplates("userActive", { lstUsers }));
                        $("#userActiveShow").empty();
                        $("#conversation div").remove();
                        $("#divSendMessage").addClass("disableposession");
                        $("#message").addClass("disableposession");
                        $("input[id$=ChatId]").val(0);
                        chatIdCurrent = 0;
                     }
                }
                catch (e) {
                    fn_message("e", "Se produjo un error al cargar datos.");
                }
            };
            error = function (xhr, ajaxOptions, thrownError) {
                fn_message("e", "Se produjo un error al cargar datos.");
            };

            Fn_CallMethod("@(Url.Action("GetListUserByAgent", "Home"))", { data: objData }, success, error);
        }

        function Fn_MessageUser(chatid, agentid)
        {
            var lstMessageUser = [];
            var lstMessageManager = [];
            var lstChat = [];
            if(chatid == undefined || chatid <= 0 || agentid == undefined || agentid <= 0)
            {
                alert("Se debe especificar chat y Agente");
                return;
            }
            var objChat =
            {
                ChatId: chatid,
                AgentId: agentid
            };

            var objData = JSON.stringify({ UserConnect: objChat});
            success = function (response) {
                try {
                    lstChat = response.Elements;
                    if (lstChat != null && lstChat.length > 0) {
                        $("#conversation div").remove();
                        for (var i = 0; i < lstChat.length; i++) {
                            if (lstChat[i].IsUser == 1) {
                                lstMessageUser = [];
                                lstMessageUser.push({
                                    message: lstChat[i].Message,
                                });
                                $("#conversation").append(fn_LoadTemplates("messageUser", { lstMessageUser }));
                                $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                            }
                            else {
                                lstMessageManager = [];
                                lstMessageManager.push({
                                    message: lstChat[i].Message,
                                });
                                $("#conversation").append(fn_LoadTemplates("messageManager", { lstMessageManager }));
                                $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                            }
                            $("input[id$=ChatId]").val(lstChat[i].ChatId);
                            $("input[id$=AgentId]").val(lstChat[i].AccountManagerId); //Of Agent
                            $("input[id$=ModuleAppId]").val(lstChat[i].ModuleAppId);
                            $("input[id$=UserName]").val(lstChat[i].UserName);
                            $("input[id$=UserEmail]").val(lstChat[i].UserEmail);
                            $("input[id$=UserToken]").val(lstChat[i].UserToken);
                            $("input[id$=AgentToken]").val(lstChat[i].AccountManagerToken);//Of Agent
                            $("input[id$=AccountAgentName]").val(lstChat[i].AccountManagerName);//Of Agent
                        }
                     } else {
                        $("#conversation div").remove();
                     }
                }
                catch (e) {
                    alert("Error");
                }
            };
            error = function (xhr, ajaxOptions, thrownError) {
                alert("Error");
            };

            Fn_CallMethod("@(Url.Action("MyConversationShow", "Home"))", { data: objData }, success, error);
        }

        $(function ()
        {
            Fn_Init();

             $.support.cors = true;

            $.connection.hub.url = "@xChatEntities.Constants.Url.SignalR";

            Counter = $.connection.counterHub;

            // Iniciar conexión con Concentrador.
            $.connection.hub.start().done(function () {

                // Botón Login Connect Account Manager.
                $(document).on('click', '#btnconnect', function ()
                {
                    if ($(this).attr("data-IsAgent") == "True")
                    {
                        if (Counter == undefined) {
                            alert("No existe conexión al servidor...");
                            return;
                        }
                        if ($("input[id$=hfRolType]").val() == @Convert.ToInt32(EnumRolTypeChat.Agent))
                        {
                            $("#loader").css('display', 'block');
                            var obj = {
                                AccountUserId: $(this).attr("data-agentvalueid"),
                                ModuloAppId: 1,
                                EMail: $("input[id$=UserEmail]").val(),
                                Password: "",
                                Token: ""
                            };
                            chatIdCurrent = 0;
                            var agentId = $(this).attr("data-agentvalueid")
                            $("input[id$=AgentId]").val(agentId);
                            $("input[id$=hfManagerId]").val($(this).attr("data-managerid"));
                            Counter.server.accountUserConnect(obj);
                           
                        }                       
                    }
                });

                // Botón chatear.
                $("#btnsendmessage").click(function () {
                    Fn_SendMenssage();
                    $("#message").val("");
                });

                $('#message').keypress(function (e) {
                    var keycode = (e.keyCode ? e.keyCode : e.which);
                    if (keycode == '13') {
                        Fn_SendMenssage();
                        e.preventDefault();
                        $("#message").val("");
                        return false;
                    }
                });

                $(document).on('click', '#action_menu_btn', function () {
                    $('.action_menu').toggle();
                });

                function Fn_SendMenssage() {
                    if ($("#message").val().trim() == "" || $("input[id$=ChatId]").val() <= 0) {
                        return false;
                    }
                    var objChat = {
                        ChatId: $("input[id$=ChatId]").val() == "" ? 0 : $("input[id$=ChatId]").val(),
                        ModuleAppId: $("input[id$=ModuleAppId]").val() == "" ? 0 : $("input[id$=ModuleAppId]").val(),
                        AgentId: $("input[id$=AgentId]").val() == "" ? 0 : $("input[id$=AgentId]").val(),
                        UserName: $("input[id$=UserName]").val(),
                        UserEmail: $("input[id$=UserEmail]").val(),
                        Message: $("#message").val(),
                        DateMessage: "",
                        UserToken: $("input[id$=UserToken]").val(),
                        AgentToken: $("input[id$=AgentToken]").val(),
                        AccountAgentName: $("input[id$=AccountAgentName]").val(),
                        ManagerToken: ""
                    };
                    Counter.server.sendToUser(objChat);
                    $("#message").text("");
                }

                $(document).on('click', '#optionMenu li', function () {
                    
                    var optionId = $(this).attr('data-input');
                    $('.action_menu').toggle()
                    if (optionId == 1)
                        Fn_CloseChatUser();


                });

            });
           
            // Chat recibido del usuario.
            Counter.client.receivedFromUser = function (obj) {

                if (obj.ChatId > 0) {

                     //chatIdCurrent = $("input[id$=ChatId]").val(); esto comente 6-9-2019
                    
                    if (obj.ChatId == chatIdCurrent) {

                        if (obj.IsSendUser == 1) {
                            lstMessageUser = [];
                            lstMessageUser.push({
                                message: obj.Message,
                            });
                            $("#conversation").append(fn_LoadTemplates("messageUser", { lstMessageUser }));
                            $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                        }
                        else {
                            lstMessageManager = [];
                            lstMessageManager.push({
                                message: obj.Message,
                            });
                            $("#conversation").append(fn_LoadTemplates("messageManager", { lstMessageManager }));
                            $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                        }
                        $("input[id$=ChatId]").val(obj.ChatId);
                        $("input[id$=AgentId]").val(obj.AgentId);
                        $("input[id$=ModuleAppId]").val(obj.ModuleAppId);
                        $("input[id$=UserName]").val(obj.UserName);
                        $("input[id$=UserEmail]").val(obj.UserEmail);
                        $("input[id$=UserToken]").val(obj.UserToken);
                        $("input[id$=AgentToken]").val(obj.AgentToken);                    
                    }                    
                }

                Fn_UserActiveByAgent($("input[id$=AgentId]").val(), "", "", "")
            };

            Counter.client.receivedFromUserDisconnect = function (obj) {
                if (obj.ChatId > 0) {
                    if (obj.IsSendUser == 1) {
                        lstMessageUser = [];
                        lstMessageUser.push({
                            message: obj.Message,
                        });
                        $("#conversation").append(fn_LoadTemplates("messageUser", { lstMessageUser }));
                        $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                    }
                    else {
                        lstMessageManager = [];
                        lstMessageManager.push({
                            message: obj.Message,
                        });
                        $("#conversation").append(fn_LoadTemplates("messageManager", { lstMessageManager }));
                        $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                    }
                    $("input[id$=ChatId]").val(obj.ChatId);
                    $("input[id$=AgentId]").val(obj.AgentId);
                    $("input[id$=ModuleAppId]").val(obj.ModuleAppId);
                    $("input[id$=UserName]").val(obj.UserName);
                    $("input[id$=UserEmail]").val(obj.UserEmail);
                    $("input[id$=UserToken]").val(obj.UserToken);
                    $("input[id$=AgentToken]").val(obj.AgentToken);
                    //$("input[id$=AccountAgentName]").val(obj.AccountAgentName);
                }
                Fn_UserActiveByAgent($("input[id$=AgentId]").val(), "", "", "")
            };
            // Conexión Satisfactoria.
            Counter.client.sucessConnect = function (token) {

                if (token != undefined && token != "") {
                    $('.listAgent').each(function (i, e) {
                        if ($($(e)[0]).attr("data-agentvalueid") == $("input[id$=AgentId]").val()) {
                            $($($(e)[0]).children()[0]).find('#idOnline').removeClass();
                            $($($(e)[0]).children()[0]).find('#idOnline').addClass('online_icon')
                        }
                    });

                    Fn_UserActiveByAgent($("input[id$=AgentId]").val(), "", "", "")
                }
                $("input[id$=ChatId]").val("0");
                $("#loader").css('display', 'none');


                /*Reload List Agents*/
                    var objChat = {
                        ChatId: 0,
                        ModuleAppId: 0,
                        AgentId : $("input[id$=AgentId]").val(),
                        ManagerId: $("input[id$=hfManagerId]").val(),
                        UserName: "",
                        UserEmail: "",
                        Message: "",
                        DateMessage: "",
                        UserToken: "",
                        AgentToken: "",
                        AccountAgentName: "",
                    };
                    Counter.server.reloadLoadListAgentConnect(objChat);
                /*End Reload List Agents*/

            };

            // Actualiza la lista de usuarios de Agente
            Counter.client.reloadNewUserConnectUserConnectByAgent = function (success) {
                if ($("input[id$=AgentId]").val() != undefined && $("input[id$=AgentId]").val() > 0)
                {
                    Fn_UserActiveByAgent($("input[id$=AgentId]").val(), "", "", "")
                }
                if (success != "") {
                    $("#loader").css('display', 'none');
                    bootbox.alert({
                        message: "Se le ah transfirio el Usuario: " + success,
                        size: 'small'
                    });
                }
            };

            // Actualiza la lista de usuarios de Agente en origen despues de transferencia
            Counter.client.reloadNewUserConnectUserConnectByAgentAfterTransfer = function (chatIdTransfer) {

                try {
                    if (chatIdTransfer > 0) {
                        //if ($("input[id$=ChatId]").val() == 0 || $("input[id$=ChatId]").val() == chatIdTransfer)
                            $("#loader").css('display', 'none');
                            Fn_UserActiveByAgent($("input[id$=AgentId]").val(), "", chatIdTransfer, "");                                
                        
                    }
                } catch (e) {
                    $("#loader").css('display', 'none');
                }

            };

            //Mensaje de agente no disponible en vista Agent
            Counter.client.monitor_messageAgentNotConnectInViewAgent = function (success) {
                try {
                    if (success == -1) {
                        $("#loader").css('display', 'none');
                        bootbox.alert({
                            message: "Agente no disponible.",
                            size: 'small'
                        });
                    }
                    else {
                        $("#loader").css('display', 'none');
                    }
                } catch (e) {
                    $("#loader").css('display', 'none');
                }
            };
            //Accion despues de que manager toma posesion de chat
            Counter.client.reloadUserConnectByAgentAfterPossesionInViewAgent = function (obj)
            {
                try {
                    if (obj.ChatId > 0)
                    {
                        if ($("input[id$=ChatId]").val() == 0 || $("input[id$=ChatId]").val() == obj.ChatId) {
                            if (obj != null)
                            {
                                $("#loader").css('display', 'none');                               
                                Fn_UserActiveByAgent($("input[id$=AgentId]").val(), obj.ChatId, "", "")
                                bootbox.alert({
                                    message: "El Manager " + obj.AccountManagerName.toUpperCase() + " a tomado posesión del chat de " + obj.UserName.toUpperCase(),
                                    size: 'small'
                                });
                              
                            }
                            else {
                                $("#loader").css('display', 'none');
                            }
                        }
                    }
                                      
                } catch (e) {
                    $("#loader").css('display', 'none');
                }
            };

            // Actualiza la lista de usuarios de Agente despues de desconexion de usuario(chat)
            Counter.client.chatUserDisconnect = function (obtUser) {
                try {
                    if ($("input[id$=AgentId]").val() != undefined && $("input[id$=AgentId]").val() > 0) {
                        if (obtUser != null && obtUser.ChatId > 0) {
                            Fn_UserActiveByAgent($("input[id$=AgentId]").val(), "", "", obtUser.ChatId)
                            $("#loader").css('display', 'none');
                            bootbox.alert({
                                message: "Se ah desconectado el Usuario: " + obtUser.UserName,
                                size: 'small'
                            });
                        } else {
                            $("#loader").css('display', 'none');
                        }
                    }
                } catch (e) {
                    $("#loader").css('display', 'none');
                }               
            };
            // Actualiza la lista de usuarios despues de desconexion de usuario (Chat) por medio de agente
            Counter.client.chatUserDisconnectAfterDisconectForAgent = function (obtUser) {
                try {
                    if ($("input[id$=AgentId]").val() != undefined && $("input[id$=AgentId]").val() > 0) {
                        if (obtUser != null && obtUser.ChatId > 0) {
                            Fn_UserActiveByAgent($("input[id$=AgentId]").val(), "", "", obtUser.ChatId)
                            $("#loader").css('display', 'none');
                            bootbox.alert({
                                message: "Se ah desconectado el Usuario: " + obtUser.UserName,
                                size: 'small'
                            });
                        } else {
                            bootbox.alert({
                                message: "No se pudo Finalizar el Chat.",
                                size: 'small'
                            });                           
                        }
                        $("#loader").css('display', 'none');
                    }
                } catch (e) {
                    $("#loader").css('display', 'none');
                }
            };

        });

    </script>

}