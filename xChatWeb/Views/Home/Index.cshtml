@{
    ViewBag.Title = "Chat Manager";
}

<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<link href="~/Content/StyleWhatsapp/styleWhatsapp.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<div class="container app" style="margin-bottom: 10px;">
    <div class="row app-one" @*style=" overflow-y: scroll;height: 800px;"*@>
        <div class="col-sm-3 side">
            <div class="side-one">
                <div class="row heading" style="font-weight: 700">
                    Agentes
                </div>
                <div class="row sideBar" style=" overflow-y: scroll;height: 760px;">
                    @if (ViewBag.AgentActive.Elements != null && ViewBag.AgentActive.Elements.Count > 0)
                    {
                        for (int i = 0; i < ViewBag.AgentActive.Elements.Count; i++)
                        {
                            <a href="#" class="listAgent" id="btnconnect" data-AgentValueId="@ViewBag.AgentActive.Elements[i].AccountManagerId" data-IsAgent="@ViewBag.AgentActive.Elements[i].AccountManagerIsAgent">
                                <div class="row sideBar-body" data-id="@ViewBag.AgentActive.Elements[i].AccountManagerId" id="lstAgentData">
                                    <div class="col-sm-3 col-xs-3 sideBar-avatar">
                                        <div class="avatar-icon">
                                            <img src="https://ptetutorials.com/images/user-profile.png">
                                            <span id="idOnline" class="Disconectonline_icon"></span>
                                        </div>
                                    </div>
                                    <div class="col-sm-9 col-xs-9 sideBar-main">
                                        <div class="row">
                                            <div class="col-sm-7 col-xs-7 sideBar-name">
                                                <span class="name-meta">
                                                    @ViewBag.AgentActive.Elements[i].AccountManagerName
                                                </span>
                                            </div>
                                            <div class="col-sm-5 col-xs-5 pull-right sideBar-time">
                                                @*@if (ViewBag.AgentActive.Elements[i].AccountManagerIsActive == 1)
                                                {
                                                    <span id="idConnect" data-AgentValueId="@ViewBag.AgentActive.Elements[i].AccountManagerId" type="button" class="btn btn-success btn-xs pull-right">Conectar</span>
                                                }
                                                else
                                                {
                                                    <span id="idConnect" data-AgentValueId="@ViewBag.AgentActive.Elements[i].AccountManagerId" type="button" class="btn btn-danger btn-xs pull-right">Conectar</span>
                                                }*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        }
                    }

                </div>
            </div>
            <div id="loader" style="display:none"></div>
        </div>
        <div class="col-sm-3 side">
            <div class="side-one">
                <div class="row heading" style="font-weight: 700">
                    Usuarios
                </div>
                <div class="row sideBar" id="userActiveShow" style=" overflow-y: scroll;height: 760px !important;">

                </div>
            </div>
        </div>
        <div class="col-sm-6 conversation">
            <div class="row heading">
                <div class="col-sm-2 col-md-1 col-xs-3 heading-avatar">
                    <div class="heading-avatar-icon">
                        <img src="~/Content/Imagenes/imgMessage.png" />
                    </div>
                </div>
                <div class="col-sm-8 col-xs-7 heading-name">
                    <a class="heading-name-meta" id="idNameUser">
                        Chat
                    </a>
                    <span class="heading-online"></span>
                </div>
                <div class="col-sm-1 col-xs-1  heading-dot pull-right">
                    <i class="fa fa-ellipsis-v fa-2x  pull-right" aria-hidden="true"></i>
                </div>
            </div>

            <div class="row message" id="conversation" style=" overflow-y: scroll;height: 700px !important;">

            </div>

            <div class="row reply">
                @*<div class="col-sm-1 col-xs-1 reply-emojis">
                        <i class="fa fa-smile-o fa-2x"></i>
                    </div>*@
                <div class="col-sm-9 col-xs-9 col-lg-11 reply-main">
                    <textarea class="form-control" rows="1" id="message" name="message"  placeholder="Escriba su mensaje ..." style="overflow-y: scroll"></textarea>
                </div>
                @*<div class="col-sm-1 col-xs-1 reply-recording">
                        <i class="fa fa-microphone fa-2x" aria-hidden="true"></i>
                    </div>*@
                <div class="col-sm-1 col-xs-1 reply-send">
                    <i class="fa fa-send fa-2x" aria-hidden="true" id="btnsendmessage"></i>
                </div>
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="displayname" value="" />
<input type="hidden" id="AgentId" value="0" />
<input type="hidden" id="ChatId" value="0" />
<input type="hidden" id="AccountManagerId" value="0" />
<input type="hidden" id="ModuleAppId" value="0" />
<input type="hidden" id="UserName" value="" />
<input type="hidden" id="UserEmail" value="" />
<input type="hidden" id="UserToken" value="" />
<input type="hidden" id="ManagerToken" value="" />
<input type="hidden" id="AccountManagerName" value="" />
@*<input type="hidden" id="haveMessageFromChatId" value="0" />*@

@section scripts{

    <script src="~/Scripts/jquery.signalR-2.4.0.js"></script>
    <script src="@xChatEntities.Constants.Url.SignalRHub"></script>

    <script type="text/javascript">
        var Counter;
        var chatIdCurrent;
        $(function () {
            Fn_Init();
        });
        function Fn_Init() {
            Fn_Bind();
        }

        function Fn_Bind() {
            
            $(".listUser").on("click", function (e) {
                e.preventDefault();
                $('.listUser div').each(function (i, e) {
                    $(e).removeClass('active_chat');
                });
                $($(this).children()[0]).addClass("active_chat");
                var chatid = $(this).attr("id")  
                Fn_MessageUser(chatid)

                var conversationEntity = { ChatId: chatid }
                Counter.server.setMessageReadForManager(conversationEntity);
                $(this).find('.haveMessageActive').removeClass();
            });

        }

        function Fn_UserActiveByAgent(agentId) {
            var lstUserActive = [];
            var lstUsers = [];
            if (agentId == undefined || agentId <= 0) {
                alert("Error ");
                return;
            }
            var objUserConnect =
            {
                AccountManagerId: agentId
            };

            var objData = JSON.stringify({ AccountManagerEntity: objUserConnect});
            success = function (response) {
                try {
                    //ChatIsReadForManager si es 1 es leido si es 0 no leido (agregar marca)
                    lstUserActive = response.Elements;
                  
                    if (lstUserActive != "" && lstUserActive != null) {
                        $("#userActiveShow a").remove();
                        lstUsers = [];
                        for (var i = 0; i < lstUserActive.length; i++) {
                            lstUsers = [];
                            if (lstUserActive[i].ChatIsReadForManager == 1)
                            {
                                lstUsers.push({
                                    userId: lstUserActive[i].ChatId,
                                    userName: lstUserActive[i].UserName,
                                    userEmail: lstUserActive[i].UserEmail,
                                    ChatIsReadForManager: lstUserActive[i].ChatIsReadForManager
                                });
                            }
                            else
                            {
                                lstUsers.push({
                                    userId: lstUserActive[i].ChatId,
                                    userName: lstUserActive[i].UserName,
                                    userEmail: lstUserActive[i].UserEmail,
                                    ChatIsReadForManager: lstUserActive[i].ChatIsReadForManager
                                });
                            }
                            
                            $("#userActiveShow").append(Fn_LoadHandlebars("userActive", { lstUsers }));
                        }
                        Fn_Bind();
                        var obj = {
                            AccountManagerId: agentId,
                            ModuloAppId: 1,
                            EMail: "jhurtado@xirectss.com",
                            Password: "",
                            Token: ""
                        };

                        //Mantiene el chat Actual activa
                        $('.listUser').each(function (i, e) {
                            if ($(e)[0].id == chatIdCurrent) {                       //Valido si es el chat actual
                                $($($(e)[0]).children()[0]).addClass("active_chat")
                            }
                        });
                        

                    } else {
                        $("#userActiveShow").append(Fn_LoadHandlebars("userActive", { lstUsers }));
                        $("#userActiveShow").empty();
                        $("#conversation div").remove();
                        fn_message("i", "No tiene Usuarios activos.");
                     }
                }
                catch (e) {
                    fn_message("e", "Se produjo un error al cargar datos.");
                }
            };
            error = function (xhr, ajaxOptions, thrownError) {
                fn_message("e", "Se produjo un error al cargar datos.");
            };

            Fn_CallMethod("@(Url.Action("MyUserActiveShow", "Home"))", { data: objData }, success, error);
        }

        function Fn_MessageUser(chatid)
        {
            var lstMessageUser = [];
            var lstMessageManager = [];
            var lstChat = [];
            if (chatid == undefined || chatid <= 0)
            {
                alert("Error ");
                return;
            }
            var objChat =
            {
                ChatId: chatid
            };

            var objData = JSON.stringify({ UserConnect: objChat});
            success = function (response) {
                try {
                    lstChat = response.Elements;
                    if (lstChat != "") {
                        $("#conversation div").remove();
                        for (var i = 0; i < lstChat.length; i++) {
                            if (lstChat[i].IsUser == 1) {
                                lstMessageUser = [];
                                lstMessageUser.push({
                                    message: lstChat[i].Message,
                                });
                                $("#conversation").append(Fn_LoadHandlebars("messageUser", { lstMessageUser }));
                                $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                            }
                            else {
                                lstMessageManager = [];
                                lstMessageManager.push({
                                    message: lstChat[i].Message,
                                });
                                $("#conversation").append(Fn_LoadHandlebars("messageManager", { lstMessageManager }));
                                $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                            }
                            $("#ChatId").val(lstChat[i].ChatId);
                            $("#AccountManagerId").val(lstChat[i].AccountManagerId);
                            $("#ModuleAppId").val(lstChat[i].ModuleAppId);
                            $("#UserName").val(lstChat[i].UserName);
                            $("#UserEmail").val(lstChat[i].UserEmail);
                            $("#UserToken").val(lstChat[i].UserToken);
                            $("#ManagerToken").val(lstChat[i].AccountManagerToken);
                            $("#AccountManagerName").val(lstChat[i].AccountManagerName);
                        }
                     } else {
                        alert("Error ");
                     }
                }
                catch (e) {
                    alert("Error ");
                }
            };
            error = function (xhr, ajaxOptions, thrownError) {
                alert("Error ");
            };

            Fn_CallMethod("@(Url.Action("MyConversationShow", "Home"))", { data: objData }, success, error);
        }

        $(function ()
        {
             $.support.cors = true;

            $.connection.hub.url = "@xChatEntities.Constants.Url.SignalR";

            Counter = $.connection.counterHub;

            // Iniciar conexión con Concentrador.
            $.connection.hub.start().done(function () {

                // Botón Login Connect Account Manager.
                $(document).on('click', '#btnconnect', function ()
                {
                    if ($(this).attr("data-IsAgent") == "True")
                    {
                        $("#loader").css('display', 'block');
                        var obj = {
                            AccountManagerId: $(this).attr("data-agentvalueid"),
                            ModuloAppId: 1,
                            EMail: $("#UserEmail").val(),
                            Password: "",
                            Token: ""
                        };

                        Counter.server.accountManagerConnect(obj);
                        var agentId = $(this).attr("data-agentvalueid")
                        $("#AgentId").val(agentId);
                    }
                    else
                    {
                        //$("#loader").css('display', 'block');
                        var obj = {
                            AccountManagerId: $(this).attr("data-agentvalueid"),
                            ModuloAppId: 1,
                            EMail: $("#UserEmail").val(),
                            Password: "",
                            Token: ""
                        };
                        
                        var agentId = $(this).attr("data-agentvalueid")
                        $("#AgentId").val(agentId);
                        Fn_UserActiveByAgent($("#AgentId").val())
                    }
                });

                // Botón chatear.
                $("#btnsendmessage").click(function () {
                    Fn_SendMenssage();
                    $("#message").val("");
                });

                $('#message').keypress(function (e) {
                    var keycode = (e.keyCode ? e.keyCode : e.which);
                    if (keycode == '13') {
                        Fn_SendMenssage();
                        e.preventDefault();
                        $("#message").val("");
                        return false;
                    }
                });

                function Fn_SendMenssage() {
                    if ($("#message").val().trim() == "") {
                        return false;
                    }
                    var objChat = {
                        ChatId: $("#ChatId").val(),
                        ModuleAppId: $("#ModuleAppId").val(),
                        AccountManagerId: $("#AccountManagerId").val(),
                        UserName: $("#UserName").val(),
                        UserEmail: $("#UserEmail").val(),
                        Message: $("#message").val(),
                        DateMessage: "",
                        UserToken: $("#UserToken").val(),
                        ManagerToken: $("#ManagerToken").val(),
                        AccountManagerName: $("#AccountManagerName").val(),
                    };
                    Counter.server.sendToUser(objChat);
                    $("#message").text("");
                }

            });
            //.fail(function () { alert('No fue posible establecer la conexion'); });
            //        console.log('Could not Connect!');

            // Chat recibido del usuario.
            Counter.client.receivedFromUser = function (obj) {
                
                if (obj.ChatId > 0) {

                     chatIdCurrent = $("#ChatId").val();

                    // Si el ChatID pertenece a la ventana actual
                    // entonces se muestra la conversación,
                    // caso contrario se ejecuta lo siguiente:
                    //  1.- se muestra el mensaje en una ventana emergente en la parte inferior derecha.
                    //  2.- el item del chatId correspondiente, debe cambiar de color.
                    if (obj.ChatId == chatIdCurrent) {

                        if (obj.IsSendUser == 1) {
                            lstMessageUser = [];
                            lstMessageUser.push({
                                message: obj.Message,
                            });
                            $("#conversation").append(Fn_LoadHandlebars("messageUser", { lstMessageUser }));
                            $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                        }
                        else {
                            lstMessageManager = [];
                            lstMessageManager.push({
                                message: obj.Message,
                            });
                            $("#conversation").append(Fn_LoadHandlebars("messageManager", { lstMessageManager }));
                            $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                        }
                        $("#ChatId").val(obj.ChatId);
                        $("#AccountManagerId").val(obj.AccountManagerId);
                        $("#ModuleAppId").val(obj.ModuleAppId);
                        $("#UserName").val(obj.UserName);
                        $("#UserEmail").val(obj.UserEmail);
                        $("#UserToken").val(obj.UserToken);
                        $("#ManagerToken").val(obj.AccountManagerToken);
                        //llamar al evento marcar como leido
                        //mandar dentro de un objeto el ChatId
                        //desmarcar el check para confirmar q se leyo
                        //Counter.server.setMessageReadForManager(objChat);

                        //$("#AccountManagerName").val(obj.AccountManagerName);
                    }
                    else {
                        //aqui es cuando una conversacion no esta leida si en caso no esta conversando con el user q le mando el mensaje
                        //aqui se le coloca algo para diferenciar q tiene mensaje no leido
                    }
                }

                Fn_UserActiveByAgent($("#AgentId").val())
            };

            Counter.client.receivedFromUserDisconnect = function (obj) {
                if (obj.ChatId > 0) {
                    if (obj.IsSendUser == 1) {
                        lstMessageUser = [];
                        lstMessageUser.push({
                            message: obj.Message,
                        });
                        $("#conversation").append(Fn_LoadHandlebars("messageUser", { lstMessageUser }));
                        $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                    }
                    else {
                        lstMessageManager = [];
                        lstMessageManager.push({
                            message: obj.Message,
                        });
                        $("#conversation").append(Fn_LoadHandlebars("messageManager", { lstMessageManager }));
                        $("#conversation").scrollTop($("#conversation")[0].scrollHeight);
                    }
                    $("#ChatId").val(obj.ChatId);
                    $("#AccountManagerId").val(obj.AccountManagerId);
                    $("#ModuleAppId").val(obj.ModuleAppId);
                    $("#UserName").val(obj.UserName);
                    $("#UserEmail").val(obj.UserEmail);
                    $("#UserToken").val(obj.UserToken);
                    $("#ManagerToken").val(obj.AccountManagerToken);
                    //$("#AccountManagerName").val(obj.AccountManagerName);
                }
                Fn_UserActiveByAgent($("#AgentId").val())
            };
            // Conexión Satisfactoria.
            Counter.client.sucessConnect = function (token) {

                if (token != undefined && token != "") {
                    $('.listAgent').each(function (i, e) {
                        if ($($(e)[0]).attr("data-agentvalueid") == $("#AgentId").val()) {
                            //$($($(e)[0]).children()[0]).find("#idConnect").addClass('btn btn-success btn-xs pull-right')
                            $($($(e)[0]).children()[0]).addClass("active_chat");
                            $($($(e)[0]).children()[0]).find('#idOnline').removeClass();
                            $($($(e)[0]).children()[0]).find('#idOnline').addClass('online_icon')
                        }
                    });

                    Fn_UserActiveByAgent($("#AgentId").val()) 
                }  
                $("#ChatId").val("0");
                $("#loader").css('display', 'none');
            };

        });

    </script>

}